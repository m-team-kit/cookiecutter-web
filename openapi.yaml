openapi: 3.0.3
info:
  title: Templates Hub REST API
  description: |-
    The OpenAPI 3.0 specification for the REST API of the Software Templates Hub: create your project from cookiecutter templates via web interface: [https://templates.services.fedcloud.eu](https://templates.services.fedcloud.eu)
    
    - [Templates Hub](https://templates.services.fedcloud.eu)
    
    - [How to add your template to the Hub](https://github.com/m-team-kit/templates-hub/blob/main/README.md)
  #termsOfService: http://swagger.io/terms/
  contact:
    email: m-contact@lists.kit.edu
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.2.0
servers:
  - url: /api/v1

tags:
  - name: templates
    description: Operations on templates
  - name: project
    description: Create a new software project from the template
  - name: database
    description: (Admin) Operations on the local copy of the database

paths:
  /templates:
    get:
      tags:
        - templates
      summary: (Public) Lists available templates
      description: Use this method to get a list of available templates. The response returns a pagination object with the templates.
      operationId: listTemplates
      parameters:
        - name: language
          in: query
          description: Programming language used in the project template (i.e. in the code generated by the template)
          required: false
          schema:
            type: string
            example: python
        - name: tags
          in: query
          description: Tags to filter by
          required: false
          schema:
            type: array
            items:
              type: string
        - $ref: '#/components/parameters/SortBy'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
        '400':
          description: Invalid status value
        'default':
          $ref: '#/components/responses/DEFAULT_ERROR'

  /templates:search:
    get:
      tags:
        - templates
      summary: (Public) Finds templates matching search query
      description: Use this method to list templates matching the search query, i.e. list of keywords to be   looked for in the title and summary fields of the template's metadata
      operationId: searchTemplates
      parameters:
        - name: keywords
          in: query
          description: List of keywords (string subsets)
          schema:
            type: array
            default: []
            items:
              type: string
        - $ref: '#/components/parameters/SortBy'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: Invalid status value
        'default':
          $ref: '#/components/responses/DEFAULT_ERROR'  

  /templates/{uuid}:
    get:
      tags:
        - templates
      summary: (Public) Finds template by UUID and shows its details
      description: Use this method to retrieve details about the specific template
      operationId: getTemplate
      parameters: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: Invalid status value
        'default':
          $ref: '#/components/responses/DEFAULT_ERROR' 
    parameters:
      - $ref: '#/components/parameters/UUID'

  /templates/{uuid}/score:
    put:
      tags:
        - templates
      summary: (User) Rates specific template
      description: Use this method to update the score/rating of the specific template
      operationId: rateTemplate
      requestBody:
        content:
          application/json:
            schema:
              type: integer
              default: 4
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
      security:
         - bearerAuth: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
        '400':
          description: Invalid status value
        'default':
          $ref: '#/components/responses/DEFAULT_ERROR' 
    parameters:
      - $ref: '#/components/parameters/UUID'

  /create/{uuid}:
    post:
      tags:
        - project
      summary: (User) Creates software project from the template
      description: Use this method to generate software project using the specific template. Generated project is returned as .zip file
      operationId: createProject
      parameters: []
      responses:
        '201':
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '400':
          description: Invalid status value
        'default':
          $ref: '#/components/responses/DEFAULT_ERROR' 
      security:
         - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/UUID'

  /db:create:
    post:
      tags:
        - database
      summary: (Admin) Generates local database
      description: Use this method to generate local copy of the database from YAML files in the git repository
      operationId: createDB
      responses:
        '204':
          description: Created
        '400':
          description: Invalid status value
        'default':
          $ref: '#/components/responses/DEFAULT_ERROR' 
      security:
         - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/GitDatabase'

  /db:update:
    put:
      tags:
        - database
      summary: (Admin) Updates local database
      description: Use this method to update local copy of the database from YAML files in the git repository
      operationId: updateDB
      responses:
        '204':
          description: Updated
        '400':
          description: Invalid status value
        'default':
          $ref: '#/components/responses/DEFAULT_ERROR' 
      security:
         - bearerAuth: []
    parameters:
      - $ref: '#/components/parameters/GitDatabase'

components:
  parameters:
    UUID:
      name: uuid
      in: path
      required: true
      description: UUID of the template to be used for generating a new software project
      schema:
        type: string
        format: uuid
    SortBy:
      name: sortBy
      in: query
      description: Order to return the results (comma separated). Generic fields are [id,title,language] #tags?
      required: false
      schema:
        type: string
        default: "+title"
        example: "+title,+language"
    GitDatabase:
      name: repo
      in: query
      description: URL of the public git repository where yaml files for the templates hub are hosted
      example: https://github.com/m-team-kit/templates-hub
      required: true
      schema:
        type: string
        example: python
  schemas:
    Template:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: UUID (unique identifier) of the template
          example: cc4f0a67-c626-4778-8658-62835b9cf899
        repoFile:
          type: string
          description: Name of the file in $gitLink with the template metadata
          example: ai4os-hub-cookiecutter-main.yaml
        title:
          type: string
          example: AI4OS template
        summary:
          type: string
        language:
          type: string
          example: python
        tags:
          type: array
          items:
            type: string
        picture:
          type: string
          description: Filename for the image to be shown as an icon
        gitLink:
          type: string
          description: URL of the public git repository where the template is located
        gitCheckout:
          type: string
          description: branch, tag, or commit ID to checkout
          example: main
        score:
          type: number
          description: User score for the template
    PaginationMetedata:
      type: object
      properties:
        total:
          type: integer
        total_pages:
          type: integer
        first_page:
          type: integer
        last_page:
          type: integer
        page:
          type: integer
        previous_page:
          type: integer
        next_page:
          type: integer
    Error:
      type: object
      properties:
        status:
          type: string
          description: Error name
        errors:
          type: object
          description: Error message
        code:
          type: integer
          description: Error code
  responses:
    DEFAULT_ERROR:
      description: Default error response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
